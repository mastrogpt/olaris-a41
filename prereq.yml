version: 3

vars:
  OS: "{{or .__OS OS}}"
  ARCH: "{{or .__ARCH ARCH}}"
  ARC: '{{if eq .OS "windows"}}.zip{{else}}.tar.gz{{end}}'
  EXE: '{{if eq .OS "windows"}}.exe{{else}}{{end}}'
  DRY: ""

tasks:

  download-and-extract:
     requires:
       vars: 
       - FILE
       - URL
       - OUT
     cmds:
     - echo "{{.OUT}} {{.FILE}} {{.URL}} {{.FILETAR}}" 
     - curl -sL "{{.URL}}" -o {{.FILE}}
     - extract "{{.FILE}}" "{{.OUT}}{{.EXE}}"
     - remove "{{.FILE}}"
  
  himalaya:
    desc: download himalaya
    vars:
      VERSION: "1.1.0"
      SUFFIX:
        sh: |
            case "{{.OS}}-{{.ARCH}}" in
            linux-amd64) echo "x86_64-linux" ;;
            linux-arm64) echo "aarch64-linux" ;;
            darwin-amd64) echo "x86_64-darwin" ;;
            darwin-arm64) echo "aarch64-darwin" ;; 
            windows-*) echo "x86_64-windows" ;;
            *) echo "unknown" ;;
            esac
            #https://github.com/pimalaya/himalaya/releases/download/v1.1.0/himalaya.aarch64-darwin.tgz
      URL:  "https://github.com/pimalaya/himalaya/releases/download/v{{.VERSION}}/himalaya.{{.SUFFIX}}.tgz"
      FILE: "{{base .URL}}"
      OUT: himalaya
    cmds:
    - task: download-and-extract
      vars:
        URL: "{{.URL}}"
        FILE: "{{.FILE}}"
        OUT: himalaya
  
  claude:
    desc: claude code
    vars:
      VERSION: "0.2.74"
    cmds:
    - bun install -g @anthropic-ai/claude-code@{{.VERSION}}
    - echo -e '#!/bin/bash\nexec $HOME/.bun/bin/claude "$@"\n' > claude
    - executable claude

  all:
    - task: himalaya
    
  test:
    vars:
      DIR: "{{.OPS_PWD}}/bin/{{.OS}}-{{.ARCH}}"
    cmds:
    - |
      {{.DRY}} rm -Rvf {{.DIR}}
      mkdir -p {{.DIR}}
      cd {{.DIR}}
      {{.DRY}} ops -task -t ../../prereq.yml -d {{.DIR}} all
    #- task: check
      
  check:
    vars:
      DIR: "{{.OPS_PWD}}/bin/{{.OS}}-{{.ARCH}}"
      FILETYPE:
        sh: |
          case "{{.OS}}" in
          (windows) echo application/vnd.microsoft.portable-executable ;;
          (darwin)  echo application/x-mach-binary ;;
          (linux)   echo application/x-executable ;;
          (*) unknown ;;
          esac
    sources:
      - '{{.DIR}}/*'
    status:
      - false
    cmds:
    - for: sources
      cmd: filetype -m {{.ITEM}} | rg {{.FILETYPE}}
 
  tests:
   - __OS=linux   __ARCH=amd64 ops -task -t prereq.yml test
   - __OS=linux   __ARCH=arm64 ops -task -t prereq.yml test
   - __OS=darwin  __ARCH=amd64 ops -task -t prereq.yml test
   - __OS=darwin  __ARCH=arm64 ops -task -t prereq.yml test
   - __OS=windows __ARCH=amd64 ops -task -t prereq.yml test
